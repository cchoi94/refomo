{"ast":null,"code":"import axios from '../../components/Requests/axiosInstance';\nexport var SELECTED_REFPOST = 'refpost:updatedSelectedRefpost';\nexport var ALL_REFPOSTS = 'refpost:setAllRefPosts';\nexport var SHOW_ERROR = 'refpost:showError';\nexport var updateSelectedRefPost = function updateSelectedRefPost(refPost) {\n  return {\n    type: SELECTED_REFPOST,\n    payload: {\n      refPost: refPost\n    }\n  };\n};\nexport var showError = function showError(error) {\n  return {\n    type: SHOW_ERROR,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var setAllRefPosts = function setAllRefPosts(refPosts) {\n  return {\n    type: ALL_REFPOSTS,\n    payload: {\n      refPosts: refPosts\n    }\n  };\n};\nexport var getRefPosts = function getRefPosts() {\n  return function (dispatch) {\n    axios.get('/api/refPosts').then(function (response) {\n      console.log(response);\n      dispatch(setAllRefPosts(response.data.refPosts));\n    }, function (error) {\n      console.log(error);\n      dispatch(showError(error));\n    });\n  };\n};\nexport var postNewRefPost = function postNewRefPost(postData, userToken) {\n  // return dispatch => {\n  //   console.log(postData, userToken)\n  // }\n  return function (dispatch) {\n    axios({\n      method: 'post',\n      url: '/api/users',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \".concat(userToken)\n      },\n      data: postData\n    }).then(function (result) {\n      console.log(result);\n    }, function (error) {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/codychoi/Desktop/refomo/redux/actions/refPost-actions.js"],"names":["axios","SELECTED_REFPOST","ALL_REFPOSTS","SHOW_ERROR","updateSelectedRefPost","refPost","type","payload","showError","error","setAllRefPosts","refPosts","getRefPosts","dispatch","get","then","response","console","log","data","postNewRefPost","postData","userToken","method","url","headers","result"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,yCAAlB;AACA,OAAO,IAAMC,gBAAgB,GAAG,gCAAzB;AACP,OAAO,IAAMC,YAAY,GAAG,wBAArB;AACP,OAAO,IAAMC,UAAU,GAAG,mBAAnB;AAEP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,OAAD,EAAa;AAChD,SAAO;AACLC,IAAAA,IAAI,EAAEL,gBADD;AAELM,IAAAA,OAAO,EAAE;AACPF,MAAAA,OAAO,EAAPA;AADO;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAClC,SAAO;AACLH,IAAAA,IAAI,EAAEH,UADD;AAELI,IAAAA,OAAO,EAAE;AACPE,MAAAA,KAAK,EAALA;AADO;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAc;AAC1C,SAAO;AACLL,IAAAA,IAAI,EAAEJ,YADD;AAELK,IAAAA,OAAO,EAAE;AACPI,MAAAA,QAAQ,EAARA;AADO;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,SAAO,UAAAC,QAAQ,EAAI;AACjBb,IAAAA,KAAK,CAACc,GAAN,CAAU,eAAV,EAA2BC,IAA3B,CAAgC,UAAAC,QAAQ,EAAI;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,MAAAA,QAAQ,CAACH,cAAc,CAACM,QAAQ,CAACG,IAAT,CAAcR,QAAf,CAAf,CAAR;AACD,KAHD,EAGG,UAAAF,KAAK,EAAI;AACVQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAI,MAAAA,QAAQ,CAACL,SAAS,CAACC,KAAD,CAAV,CAAR;AACD,KAND;AAOD,GARD;AASD,CAVM;AAYP,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAWC,SAAX,EAAyB;AACrD;AACA;AACA;AACA,SAAO,UAAAT,QAAQ,EAAI;AACjBb,IAAAA,KAAK,CAAC;AACJuB,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,YAFD;AAGJC,MAAAA,OAAO,EAAE;AACP,wBAAiB,kBADV;AAEP,0CAA4BH,SAA5B;AAFO,OAHL;AAOJH,MAAAA,IAAI,EAAEE;AAPF,KAAD,CAAL,CAQGN,IARH,CAQQ,UAAAW,MAAM,EAAI;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACD,KAVD,EAUG,UAAAjB,KAAK,EAAI;AACVQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD,KAZD;AAaD,GAdD;AAeD,CAnBM","sourcesContent":["import axios from '../../components/Requests/axiosInstance'\nexport const SELECTED_REFPOST = 'refpost:updatedSelectedRefpost'\nexport const ALL_REFPOSTS = 'refpost:setAllRefPosts'\nexport const SHOW_ERROR = 'refpost:showError'\n\nexport const updateSelectedRefPost = (refPost) => {\n  return {\n    type: SELECTED_REFPOST,\n    payload: {\n      refPost\n    }\n  }\n}\n\nexport const showError = (error) => {\n  return {\n    type: SHOW_ERROR,\n    payload: {\n      error\n    }\n  }\n}\n\nexport const setAllRefPosts = (refPosts) => {\n  return {\n    type: ALL_REFPOSTS,\n    payload: {\n      refPosts\n    }\n  }\n}\n\nexport const getRefPosts = () => {\n  return dispatch => {\n    axios.get('/api/refPosts').then(response => {\n      console.log(response)\n      dispatch(setAllRefPosts(response.data.refPosts))\n    }, error => {\n      console.log(error)\n      dispatch(showError(error))\n    })\n  }\n}\n\nexport const postNewRefPost = (postData, userToken) => {\n  // return dispatch => {\n  //   console.log(postData, userToken)\n  // }\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: '/api/users',\n      headers: {\n        'Content-Type' : 'application/json',\n        'Authorization' : `Bearer ${userToken}`\n      },\n      data: postData\n    }).then(result => {\n      console.log(result)\n    }, error => {\n      console.log(error)\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}